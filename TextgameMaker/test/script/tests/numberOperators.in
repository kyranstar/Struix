#arithmetic
println(1+1); #2
println(10-3.5); #6.5
println(5*5); #25
println(10/2); #5
println(10/8); #1.25
println(10/0); #NaN but we just return 0
println(15^3); #3375
println(10^-1); #0.1

println("");

#comparisons
println(1 < 3);
println(3 < 1);
println(4 > 2);
println(2 > 4);
println(3 <= 3);
println(3 <= 4);
println(4 <= 3);
println(3 >= 3);
println(4 >= 3);
println(3 >= 4);

assert(1 < 2);
assert(666 >= 666);
assert(-5 > -6);
assert(0 >= -1);
assert('a' < 's');
assert('sw' <= 'sw');

// add
assert(1 + 999 equals 1000);
assert(2 - -2 equals 4);
assert(-1 + 1 equals 0);
assert(1 - 50 equals -49);

// multiply
assert(3 * 50 equals 150);
assert(4 / 2 equals 2);
assert(1 / 4 equals 0.25);
assert(999999 % 3 equals 0);
assert(-5 * -5 is equal to 25);
assert('ab'*3 equals "ababab");

// power
assert(2^10 equals 1024);
assert(3^3 equals 27);